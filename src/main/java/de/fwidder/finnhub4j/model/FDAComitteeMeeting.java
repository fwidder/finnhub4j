/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.fwidder.finnhub4j.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * FDAComitteeMeeting
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-09T22:29:37.142+01:00")
public class FDAComitteeMeeting {
    @JsonProperty("fromDate")
    private String fromDate = null;

    @JsonProperty("toDate")
    private String toDate = null;

    @JsonProperty("eventDescription")
    private String eventDescription = null;

    @JsonProperty("url")
    private String url = null;

    public FDAComitteeMeeting fromDate(String fromDate) {
        this.fromDate = fromDate;
        return this;
    }

    /**
     * Start time of the event in EST.
     *
     * @return fromDate
     **/
    @ApiModelProperty(value = "Start time of the event in EST.")
    public String getFromDate() {
        return fromDate;
    }

    public void setFromDate(String fromDate) {
        this.fromDate = fromDate;
    }

    public FDAComitteeMeeting toDate(String toDate) {
        this.toDate = toDate;
        return this;
    }

    /**
     * End time of the event in EST.
     *
     * @return toDate
     **/
    @ApiModelProperty(value = "End time of the event in EST.")
    public String getToDate() {
        return toDate;
    }

    public void setToDate(String toDate) {
        this.toDate = toDate;
    }

    public FDAComitteeMeeting eventDescription(String eventDescription) {
        this.eventDescription = eventDescription;
        return this;
    }

    /**
     * Event&#39;s description.
     *
     * @return eventDescription
     **/
    @ApiModelProperty(value = "Event's description.")
    public String getEventDescription() {
        return eventDescription;
    }

    public void setEventDescription(String eventDescription) {
        this.eventDescription = eventDescription;
    }

    public FDAComitteeMeeting url(String url) {
        this.url = url;
        return this;
    }

    /**
     * URL.
     *
     * @return url
     **/
    @ApiModelProperty(value = "URL.")
    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FDAComitteeMeeting fdAComitteeMeeting = (FDAComitteeMeeting) o;
        return Objects.equals(this.fromDate, fdAComitteeMeeting.fromDate) &&
                Objects.equals(this.toDate, fdAComitteeMeeting.toDate) &&
                Objects.equals(this.eventDescription, fdAComitteeMeeting.eventDescription) &&
                Objects.equals(this.url, fdAComitteeMeeting.url);
    }

    @Override
    public int hashCode() {
        return Objects.hash(fromDate, toDate, eventDescription, url);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FDAComitteeMeeting {\n");

        sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
        sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
        sb.append("    eventDescription: ").append(toIndentedString(eventDescription)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

