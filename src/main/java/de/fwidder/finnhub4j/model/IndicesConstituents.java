/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.fwidder.finnhub4j.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * IndicesConstituents
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-09T22:29:37.142+01:00")
public class IndicesConstituents {
    @JsonProperty("symbol")
    private String symbol = null;

    @JsonProperty("constituents")
    private List<String> constituents = null;

    @JsonProperty("constituentsBreakdown")
    private List<IndicesConstituentsBreakdown> constituentsBreakdown = null;

    public IndicesConstituents symbol(String symbol) {
        this.symbol = symbol;
        return this;
    }

    /**
     * Index&#39;s symbol.
     *
     * @return symbol
     **/
    @ApiModelProperty(value = "Index's symbol.")
    public String getSymbol() {
        return symbol;
    }

    public void setSymbol(String symbol) {
        this.symbol = symbol;
    }

    public IndicesConstituents constituents(List<String> constituents) {
        this.constituents = constituents;
        return this;
    }

    public IndicesConstituents addConstituentsItem(String constituentsItem) {
        if (this.constituents == null) {
            this.constituents = new ArrayList<>();
        }
        this.constituents.add(constituentsItem);
        return this;
    }

    /**
     * Array of constituents.
     *
     * @return constituents
     **/
    @ApiModelProperty(value = "Array of constituents.")
    public List<String> getConstituents() {
        return constituents;
    }

    public void setConstituents(List<String> constituents) {
        this.constituents = constituents;
    }

    public IndicesConstituents constituentsBreakdown(List<IndicesConstituentsBreakdown> constituentsBreakdown) {
        this.constituentsBreakdown = constituentsBreakdown;
        return this;
    }

    public IndicesConstituents addConstituentsBreakdownItem(IndicesConstituentsBreakdown constituentsBreakdownItem) {
        if (this.constituentsBreakdown == null) {
            this.constituentsBreakdown = new ArrayList<>();
        }
        this.constituentsBreakdown.add(constituentsBreakdownItem);
        return this;
    }

    /**
     * Array of constituents&#39; details.
     *
     * @return constituentsBreakdown
     **/
    @ApiModelProperty(value = "Array of constituents' details.")
    public List<IndicesConstituentsBreakdown> getConstituentsBreakdown() {
        return constituentsBreakdown;
    }

    public void setConstituentsBreakdown(List<IndicesConstituentsBreakdown> constituentsBreakdown) {
        this.constituentsBreakdown = constituentsBreakdown;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        IndicesConstituents indicesConstituents = (IndicesConstituents) o;
        return Objects.equals(this.symbol, indicesConstituents.symbol) &&
                Objects.equals(this.constituents, indicesConstituents.constituents) &&
                Objects.equals(this.constituentsBreakdown, indicesConstituents.constituentsBreakdown);
    }

    @Override
    public int hashCode() {
        return Objects.hash(symbol, constituents, constituentsBreakdown);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class IndicesConstituents {\n");

        sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
        sb.append("    constituents: ").append(toIndentedString(constituents)).append("\n");
        sb.append("    constituentsBreakdown: ").append(toIndentedString(constituentsBreakdown)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

