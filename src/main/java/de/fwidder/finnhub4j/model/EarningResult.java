/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.fwidder.finnhub4j.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.time.LocalDate;
import java.util.Objects;

/**
 * EarningResult
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-09T22:29:37.142+01:00")
public class EarningResult {
    @JsonProperty("actual")
    private Float actual = null;

    @JsonProperty("estimate")
    private Float estimate = null;

    @JsonProperty("surprise")
    private Float surprise = null;

    @JsonProperty("surprisePercent")
    private Float surprisePercent = null;

    @JsonProperty("period")
    private LocalDate period = null;

    @JsonProperty("symbol")
    private String symbol = null;

    @JsonProperty("year")
    private Long year = null;

    @JsonProperty("quarter")
    private Long quarter = null;

    public EarningResult actual(Float actual) {
        this.actual = actual;
        return this;
    }

    /**
     * Actual earning result.
     *
     * @return actual
     **/
    @ApiModelProperty(value = "Actual earning result.")
    public Float getActual() {
        return actual;
    }

    public void setActual(Float actual) {
        this.actual = actual;
    }

    public EarningResult estimate(Float estimate) {
        this.estimate = estimate;
        return this;
    }

    /**
     * Estimated earning.
     *
     * @return estimate
     **/
    @ApiModelProperty(value = "Estimated earning.")
    public Float getEstimate() {
        return estimate;
    }

    public void setEstimate(Float estimate) {
        this.estimate = estimate;
    }

    public EarningResult surprise(Float surprise) {
        this.surprise = surprise;
        return this;
    }

    /**
     * Surprise - The difference between actual and estimate.
     *
     * @return surprise
     **/
    @ApiModelProperty(value = "Surprise - The difference between actual and estimate.")
    public Float getSurprise() {
        return surprise;
    }

    public void setSurprise(Float surprise) {
        this.surprise = surprise;
    }

    public EarningResult surprisePercent(Float surprisePercent) {
        this.surprisePercent = surprisePercent;
        return this;
    }

    /**
     * Surprise percent.
     *
     * @return surprisePercent
     **/
    @ApiModelProperty(value = "Surprise percent.")
    public Float getSurprisePercent() {
        return surprisePercent;
    }

    public void setSurprisePercent(Float surprisePercent) {
        this.surprisePercent = surprisePercent;
    }

    public EarningResult period(LocalDate period) {
        this.period = period;
        return this;
    }

    /**
     * Reported period.
     *
     * @return period
     **/
    @ApiModelProperty(value = "Reported period.")
    public LocalDate getPeriod() {
        return period;
    }

    public void setPeriod(LocalDate period) {
        this.period = period;
    }

    public EarningResult symbol(String symbol) {
        this.symbol = symbol;
        return this;
    }

    /**
     * Company symbol.
     *
     * @return symbol
     **/
    @ApiModelProperty(value = "Company symbol.")
    public String getSymbol() {
        return symbol;
    }

    public void setSymbol(String symbol) {
        this.symbol = symbol;
    }

    public EarningResult year(Long year) {
        this.year = year;
        return this;
    }

    /**
     * Fiscal year.
     *
     * @return year
     **/
    @ApiModelProperty(value = "Fiscal year.")
    public Long getYear() {
        return year;
    }

    public void setYear(Long year) {
        this.year = year;
    }

    public EarningResult quarter(Long quarter) {
        this.quarter = quarter;
        return this;
    }

    /**
     * Fiscal quarter.
     *
     * @return quarter
     **/
    @ApiModelProperty(value = "Fiscal quarter.")
    public Long getQuarter() {
        return quarter;
    }

    public void setQuarter(Long quarter) {
        this.quarter = quarter;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EarningResult earningResult = (EarningResult) o;
        return Objects.equals(this.actual, earningResult.actual) &&
                Objects.equals(this.estimate, earningResult.estimate) &&
                Objects.equals(this.surprise, earningResult.surprise) &&
                Objects.equals(this.surprisePercent, earningResult.surprisePercent) &&
                Objects.equals(this.period, earningResult.period) &&
                Objects.equals(this.symbol, earningResult.symbol) &&
                Objects.equals(this.year, earningResult.year) &&
                Objects.equals(this.quarter, earningResult.quarter);
    }

    @Override
    public int hashCode() {
        return Objects.hash(actual, estimate, surprise, surprisePercent, period, symbol, year, quarter);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EarningResult {\n");

        sb.append("    actual: ").append(toIndentedString(actual)).append("\n");
        sb.append("    estimate: ").append(toIndentedString(estimate)).append("\n");
        sb.append("    surprise: ").append(toIndentedString(surprise)).append("\n");
        sb.append("    surprisePercent: ").append(toIndentedString(surprisePercent)).append("\n");
        sb.append("    period: ").append(toIndentedString(period)).append("\n");
        sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
        sb.append("    year: ").append(toIndentedString(year)).append("\n");
        sb.append("    quarter: ").append(toIndentedString(quarter)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

