/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.fwidder.finnhub4j.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * BasicFinancials
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-09T22:29:37.142+01:00")
public class BasicFinancials {
    @JsonProperty("symbol")
    private String symbol = null;

    @JsonProperty("metricType")
    private String metricType = null;

    @JsonProperty("series")
    private MetricSeriesMap series = null;

    @JsonProperty("metric")
    private MetricMap metric = null;

    public BasicFinancials symbol(String symbol) {
        this.symbol = symbol;
        return this;
    }

    /**
     * Symbol of the company.
     *
     * @return symbol
     **/
    @ApiModelProperty(value = "Symbol of the company.")
    public String getSymbol() {
        return symbol;
    }

    public void setSymbol(String symbol) {
        this.symbol = symbol;
    }

    public BasicFinancials metricType(String metricType) {
        this.metricType = metricType;
        return this;
    }

    /**
     * Metric type.
     *
     * @return metricType
     **/
    @ApiModelProperty(value = "Metric type.")
    public String getMetricType() {
        return metricType;
    }

    public void setMetricType(String metricType) {
        this.metricType = metricType;
    }

    public BasicFinancials series(MetricSeriesMap series) {
        this.series = series;
        return this;
    }

    /**
     * Map key-value pair of time-series ratios.
     *
     * @return series
     **/
    @ApiModelProperty(value = "Map key-value pair of time-series ratios.")
    public MetricSeriesMap getSeries() {
        return series;
    }

    public void setSeries(MetricSeriesMap series) {
        this.series = series;
    }

    public BasicFinancials metric(MetricMap metric) {
        this.metric = metric;
        return this;
    }

    /**
     * Map key-value pair of key ratios and metrics.
     *
     * @return metric
     **/
    @ApiModelProperty(value = "Map key-value pair of key ratios and metrics.")
    public MetricMap getMetric() {
        return metric;
    }

    public void setMetric(MetricMap metric) {
        this.metric = metric;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BasicFinancials basicFinancials = (BasicFinancials) o;
        return Objects.equals(this.symbol, basicFinancials.symbol) &&
                Objects.equals(this.metricType, basicFinancials.metricType) &&
                Objects.equals(this.series, basicFinancials.series) &&
                Objects.equals(this.metric, basicFinancials.metric);
    }

    @Override
    public int hashCode() {
        return Objects.hash(symbol, metricType, series, metric);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class BasicFinancials {\n");

        sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
        sb.append("    metricType: ").append(toIndentedString(metricType)).append("\n");
        sb.append("    series: ").append(toIndentedString(series)).append("\n");
        sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

